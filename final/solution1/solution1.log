==============================================================
File generated on Wed Dec 18 02:57:42 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_bind -effort=medium
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_schedule -effort=medium
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_phys_opt=none
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_compile -pipeline_loops=64
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_compile -name_max_length=256
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_schedule -enable_dsp_full_reg=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -register_reset_num=3
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -auto_prefix=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -enable_maxiConservative=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_interface -m_axi_addr64=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
File generated on Wed Dec 18 02:58:03 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.641 ; gain = 19.637
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.641 ; gain = 19.637
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.504 ; gain = 20.500
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.762 ; gain = 20.758
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:18) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:19) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:21) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:22) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.840 ; gain = 41.836
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.840 ; gain = 41.836
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_load_2', conv2D.c:23) on array 'input_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 13, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.226 seconds; current allocated memory: 80.508 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.48 seconds; current allocated memory: 82.010 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 72 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.767 seconds; current allocated memory: 84.932 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 11.225 seconds; peak allocated memory: 84.932 MB.
==============================================================
File generated on Wed Dec 18 03:01:50 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.590 ; gain = 19.543
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.590 ; gain = 19.543
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.781 ; gain = 20.734
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 106.035 ; gain = 20.988
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:19) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:20) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:22) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:23) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.016 ; gain = 41.969
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:05 . Memory (MB): peak = 127.125 ; gain = 42.078
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_s) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-69] Unable to schedule bus request on port 'gmem' (conv2D.c:24) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 2 cycles (II = 2).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 2 cycles (II = 2).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 3 cycles (II = 3).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 3 cycles (II = 3).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 4 cycles (II = 4).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 4 cycles (II = 4).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 130 cycles (II = 130).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 130 cycles (II = 130).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 67 cycles (II = 67).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 67 cycles (II = 67).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 35 cycles (II = 35).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 35 cycles (II = 35).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 51 cycles (II = 51).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 51 cycles (II = 51).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 43 cycles (II = 43).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 43 cycles (II = 43).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 47 cycles (II = 47).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 47 cycles (II = 47).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 45 cycles (II = 45).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 45 cycles (II = 45).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' (conv2D.c:27) within the last 46 cycles (II = 46).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' (conv2D.c:24) within the first 46 cycles (II = 46).
Please consider increasing the target initiation interval of the pipeline.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 46, Depth = 235.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.118 seconds; current allocated memory: 83.428 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.998 seconds; current allocated memory: 86.585 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return', 'input_r', 'kernel' and 'output_r' to AXI-Lite port AXILiteS.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.997 seconds; current allocated memory: 92.770 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:09 ; elapsed = 00:00:15 . Memory (MB): peak = 155.277 ; gain = 70.230
INFO: [SYSC 207-301] Generating SystemC RTL for conv2D with prefix conv2D_.
INFO: [VHDL 208-304] Generating VHDL RTL for conv2D with prefix conv2D_.
INFO: [VLOG 209-307] Generating Verilog RTL for conv2D with prefix conv2D_.
INFO: [HLS 200-112] Total elapsed time: 15.388 seconds; peak allocated memory: 92.770 MB.
==============================================================
File generated on Wed Dec 18 03:12:12 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
File generated on Wed Dec 18 03:27:47 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_phys_opt=place
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_bind -effort=medium
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_phys_opt=none
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -register_reset_num=3
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -auto_prefix=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -enable_maxiConservative=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_interface -m_axi_addr64=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
File generated on Wed Dec 18 03:28:06 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.297 ; gain = 19.441
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.297 ; gain = 19.441
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.512 ; gain = 20.656
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.766 ; gain = 20.910
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:28) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:32) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 128.488 ; gain = 43.633
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 128.488 ; gain = 43.633
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:34) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:34) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:37) of variable 'sum_2_1_0_2_2', conv2D.c:34 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.169 seconds; current allocated memory: 80.631 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 82.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.829 seconds; current allocated memory: 85.487 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 11.141 seconds; peak allocated memory: 85.487 MB.
==============================================================
File generated on Wed Dec 18 03:32:27 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.516 ; gain = 19.625
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.516 ; gain = 19.625
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.926 ; gain = 21.035
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 106.180 ; gain = 21.289
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:28) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:32) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.238 ; gain = 42.348
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.414 ; gain = 42.523
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:34) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:34) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:37) of variable 'sum_2_1_0_2_2', conv2D.c:34 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.136 seconds; current allocated memory: 80.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.382 seconds; current allocated memory: 82.308 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.868 seconds; current allocated memory: 85.534 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 11.286 seconds; peak allocated memory: 85.534 MB.
==============================================================
File generated on Wed Dec 18 03:34:54 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.543 ; gain = 19.355
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.543 ; gain = 19.355
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.707 ; gain = 20.520
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.965 ; gain = 20.777
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:28) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:32) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.621 ; gain = 41.434
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.320 ; gain = 42.133
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:34) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:34) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:37) of variable 'sum_2_1_0_2_2', conv2D.c:34 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.175 seconds; current allocated memory: 80.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.378 seconds; current allocated memory: 82.308 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.86 seconds; current allocated memory: 85.534 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 11.216 seconds; peak allocated memory: 85.534 MB.
==============================================================
File generated on Wed Dec 18 03:36:16 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.402 ; gain = 19.316
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.402 ; gain = 19.316
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.598 ; gain = 20.512
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.855 ; gain = 20.770
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:18) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:19) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:21) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:22) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.645 ; gain = 41.559
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.766 ; gain = 41.680
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_load_2', conv2D.c:23) on array 'input_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 13, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 6.814 seconds; current allocated memory: 80.492 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.398 seconds; current allocated memory: 82.010 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 72 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.675 seconds; current allocated memory: 84.963 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 10.396 seconds; peak allocated memory: 84.963 MB.
==============================================================
File generated on Wed Dec 18 03:38:05 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.387 ; gain = 19.555
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.387 ; gain = 19.555
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.602 ; gain = 20.770
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 105.855 ; gain = 21.023
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:28) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:32) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.047 ; gain = 42.215
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.074 ; gain = 42.242
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:34) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:34) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:37) of variable 'sum_2_1_0_2_2', conv2D.c:34 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.199 seconds; current allocated memory: 80.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.382 seconds; current allocated memory: 82.308 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.847 seconds; current allocated memory: 85.533 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 11.289 seconds; peak allocated memory: 85.533 MB.
==============================================================
File generated on Wed Dec 18 03:38:50 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_phys_opt=place
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_bind -effort=medium
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_phys_opt=none
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -register_reset_num=3
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -auto_prefix=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_rtl -enable_maxiConservative=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_interface -m_axi_addr64=1
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
==============================================================
File generated on Wed Dec 18 09:05:29 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:16 . Memory (MB): peak = 104.383 ; gain = 20.008
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:16 . Memory (MB): peak = 104.383 ; gain = 20.008
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:17 . Memory (MB): peak = 105.590 ; gain = 21.215
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:17 . Memory (MB): peak = 105.844 ; gain = 21.469
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:9).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:28) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:32) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:9) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:9)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:18 . Memory (MB): peak = 127.961 ; gain = 43.586
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:18 . Memory (MB): peak = 127.961 ; gain = 43.586
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:34) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:34) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:37) of variable 'sum_2_1_0_2_2', conv2D.c:34 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 24.69 seconds; current allocated memory: 80.647 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.128 seconds; current allocated memory: 82.278 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 2.587 seconds; current allocated memory: 85.503 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 35.787 seconds; peak allocated memory: 85.503 MB.
==============================================================
File generated on Wed Dec 18 09:06:59 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
==============================================================
File generated on Wed Dec 18 09:30:07 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
File generated on Wed Dec 18 09:30:37 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.258 ; gain = 19.047
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.258 ; gain = 19.047
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.480 ; gain = 20.270
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.734 ; gain = 20.523
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:4).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:24) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:25) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:27) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:29) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:4) in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:5) in dimension 2 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:4)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.285 ; gain = 42.074
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.285 ; gain = 42.074
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:31) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:34) of variable 'sum_2_1_0_2_2', conv2D.c:31 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.874 seconds; current allocated memory: 80.642 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.471 seconds; current allocated memory: 82.272 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 1.062 seconds; current allocated memory: 85.496 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 12.566 seconds; peak allocated memory: 85.496 MB.
==============================================================
File generated on Wed Dec 18 09:36:17 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.312 ; gain = 19.344
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 104.312 ; gain = 19.344
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.457 ; gain = 20.488
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.711 ; gain = 20.742
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:4).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:15) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:16) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:18) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:20) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:4)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 126.828 ; gain = 41.859
INFO: [XFORM 203-811] Inferring bus burst read of length 9 on port 'gmem1' (conv2D.c:22:2).
INFO: [XFORM 203-811] Inferring bus burst write of length 9 on port 'gmem2' (conv2D.c:25:13).
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 127.289 ; gain = 42.320
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_s) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-69] Unable to schedule bus request on port 'gmem0' (conv2D.c:22) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 2 cycles (II = 2).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 2 cycles (II = 2).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 3 cycles (II = 3).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 3 cycles (II = 3).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 4 cycles (II = 4).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 4 cycles (II = 4).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 19 cycles (II = 19).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 27 cycles (II = 27).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 23 cycles (II = 23).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 25 cycles (II = 25).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 24 cycles (II = 24).
Please consider increasing the target initiation interval of the pipeline.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 25, Depth = 46.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 7.825 seconds; current allocated memory: 81.299 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.629 seconds; current allocated memory: 83.477 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return', 'input_r', 'kernel' and 'output_r' to AXI-Lite port AXILiteS.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.878 seconds; current allocated memory: 88.522 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:00:14 . Memory (MB): peak = 148.781 ; gain = 63.812
INFO: [SYSC 207-301] Generating SystemC RTL for conv2D with prefix conv2D_.
INFO: [VHDL 208-304] Generating VHDL RTL for conv2D with prefix conv2D_.
INFO: [VLOG 209-307] Generating Verilog RTL for conv2D with prefix conv2D_.
INFO: [HLS 200-112] Total elapsed time: 13.748 seconds; peak allocated memory: 88.522 MB.
==============================================================
File generated on Wed Dec 18 09:36:44 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
File generated on Wed Dec 18 09:51:46 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
File generated on Wed Dec 18 09:52:16 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.461 ; gain = 19.816
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.461 ; gain = 19.816
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 105.496 ; gain = 20.852
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 105.754 ; gain = 21.109
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:10).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:31) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:33) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:35) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:10) in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:11) in dimension 2 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:10)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 126.828 ; gain = 42.184
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 126.832 ; gain = 42.188
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:37) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:40) of variable 'sum_2_1_0_2_2', conv2D.c:37 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 10.195 seconds; current allocated memory: 80.642 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.572 seconds; current allocated memory: 82.273 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 1.363 seconds; current allocated memory: 85.496 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 16.714 seconds; peak allocated memory: 85.496 MB.
==============================================================
File generated on Wed Dec 18 09:54:41 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
File generated on Wed Dec 18 09:55:25 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.441 ; gain = 19.191
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.441 ; gain = 19.191
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.555 ; gain = 20.305
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 105.809 ; gain = 20.559
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:10).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:30) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:31) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:33) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:35) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-101] Partitioning array 'input' (conv2D.c:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'kernel' (conv2D.c:11) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:10)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:06 . Memory (MB): peak = 127.008 ; gain = 41.758
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:06 . Memory (MB): peak = 127.008 ; gain = 41.758
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_0_load_2', conv2D.c:37) on array 'input_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_0'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_2_load_4', conv2D.c:37) on array 'input_2' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_2'.
WARNING: [SCHED 204-69] Unable to schedule 'store' operation (conv2D.c:40) of variable 'sum_2_1_0_2_2', conv2D.c:37 on array 'output_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'output_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 9, Depth = 21.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 8.321 seconds; current allocated memory: 80.643 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.569 seconds; current allocated memory: 82.258 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_3' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_4' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_0' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_1' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel_2' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_2_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_3_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_4_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_0_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_1_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_2_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.939 seconds; current allocated memory: 85.499 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 13.881 seconds; peak allocated memory: 85.499 MB.
==============================================================
File generated on Wed Dec 18 09:56:37 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.438 ; gain = 19.441
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.438 ; gain = 19.441
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 105.699 ; gain = 20.703
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 105.953 ; gain = 20.957
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:10).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:21) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:22) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:24) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:26) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:10)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 126.695 ; gain = 41.699
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 127.086 ; gain = 42.090
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-69] Unable to schedule 'load' operation ('input_load_2', conv2D.c:28) on array 'input_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'input_r'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 13, Depth = 20.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.804 seconds; current allocated memory: 80.512 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.709 seconds; current allocated memory: 81.993 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port AXILiteS.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/input_r_Din_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'conv2D/kernel_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 72 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 0.923 seconds; current allocated memory: 84.962 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
ERROR: [IMPL 213-400] The Vivado HLS generated IP does not comply with SDAccel integration requirements. Check interface pragmas to ensure the design only uses one s_axilite interface including the 'return' port and one or more m_axi interfaces with offset=slave set to the s_axilite interface; there should not be any other port interface used.
ERROR: [HLS 200-445] Unexpected error generating RTL model: generate_json error: Found feature incompatible with SDX target
INFO: [HLS 200-112] Total elapsed time: 15.699 seconds; peak allocated memory: 84.962 MB.
==============================================================
File generated on Wed Dec 18 09:58:44 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.473 ; gain = 19.871
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 104.473 ; gain = 19.871
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:06 . Memory (MB): peak = 105.824 ; gain = 21.223
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:06 . Memory (MB): peak = 106.078 ; gain = 21.477
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:4).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:15) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:16) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:18) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:20) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:4)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:06 . Memory (MB): peak = 127.137 ; gain = 42.535
INFO: [XFORM 203-811] Inferring bus burst read of length 9 on port 'gmem1' (conv2D.c:22:2).
INFO: [XFORM 203-811] Inferring bus burst write of length 9 on port 'gmem2' (conv2D.c:25:13).
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:07 . Memory (MB): peak = 127.355 ; gain = 42.754
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_s) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-69] Unable to schedule bus request on port 'gmem0' (conv2D.c:22) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 2 cycles (II = 2).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 2 cycles (II = 2).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 3 cycles (II = 3).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 3 cycles (II = 3).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 4 cycles (II = 4).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 4 cycles (II = 4).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 19 cycles (II = 19).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 27 cycles (II = 27).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 23 cycles (II = 23).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 25 cycles (II = 25).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 24 cycles (II = 24).
Please consider increasing the target initiation interval of the pipeline.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 25, Depth = 46.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 10.071 seconds; current allocated memory: 81.299 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.798 seconds; current allocated memory: 83.476 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return', 'input_r', 'kernel' and 'output_r' to AXI-Lite port AXILiteS.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 1.217 seconds; current allocated memory: 88.522 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:09 ; elapsed = 00:00:18 . Memory (MB): peak = 148.230 ; gain = 63.629
INFO: [SYSC 207-301] Generating SystemC RTL for conv2D with prefix conv2D_.
INFO: [VHDL 208-304] Generating VHDL RTL for conv2D with prefix conv2D_.
INFO: [VLOG 209-307] Generating Verilog RTL for conv2D with prefix conv2D_.
INFO: [HLS 200-112] Total elapsed time: 17.554 seconds; peak allocated memory: 88.522 MB.
==============================================================
File generated on Wed Dec 18 09:59:19 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
File generated on Wed Dec 18 10:09:42 +0700 2024
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 2.7ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_sdx -optimization_level=0
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty 27%
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 64 or its parent loop when its trip count is less than or equal 64.
INFO: [XFORM 203-1161] The maximum of name length is set into 256.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'conv2D.c' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.422 ; gain = 19.426
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 104.422 ; gain = 19.426
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:00 ; elapsed = 00:00:06 . Memory (MB): peak = 105.625 ; gain = 20.629
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:06 . Memory (MB): peak = 105.879 ; gain = 20.883
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv2D' (conv2D.c:4).
INFO: [HLS 200-489] Unrolling loop 'Loop-1' (conv2D.c:15) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (conv2D.c:16) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1' (conv2D.c:18) in function 'conv2D' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1.1.1' (conv2D.c:20) in function 'conv2D' completely with a factor of 3.
INFO: [XFORM 203-11] Balancing expressions in function 'conv2D' (conv2D.c:4)...72 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 127.715 ; gain = 42.719
INFO: [XFORM 203-811] Inferring bus burst write of length 9 on port 'gmem2' (conv2D.c:25:13).
INFO: [XFORM 203-811] Inferring bus burst read of length 9 on port 'gmem1' (conv2D.c:22:2).
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 127.715 ; gain = 42.719
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'conv2D' ...
WARNING: [SYN 201-107] Renaming port name 'conv2D/input' to 'conv2D/input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'conv2D/output' to 'conv2D/output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_2_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_2_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_1_1_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_0_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_s) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=tmp_1_0_0_1_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'conv2D'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-69] Unable to schedule bus request on port 'gmem0' (conv2D.c:22) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 2 cycles (II = 2).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 2 cycles (II = 2).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 3 cycles (II = 3).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 3 cycles (II = 3).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 4 cycles (II = 4).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem2' (conv2D.c:25) within the last 4 cycles (II = 4).
Please consider increasing the initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 19 cycles (II = 19).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 27 cycles (II = 27).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 23 cycles (II = 23).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 25 cycles (II = 25).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem0' (conv2D.c:22) within the first 24 cycles (II = 24).
Please consider increasing the target initiation interval of the pipeline.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 25, Depth = 46.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 10.025 seconds; current allocated memory: 81.268 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.709 seconds; current allocated memory: 83.446 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv2D' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/gmem2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/kernel' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'conv2D/output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'conv2D' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return', 'input_r', 'kernel' and 'output_r' to AXI-Lite port AXILiteS.
INFO: [RTGEN 206-100] Generating core module 'conv2D_mul_32s_32s_32_4_1': 81 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv2D'.
INFO: [HLS 200-111]  Elapsed time: 1.199 seconds; current allocated memory: 88.507 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'conv2D_conv2D_mul_32s_32s_32_4_1_Mul4S_0'
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:08 ; elapsed = 00:00:17 . Memory (MB): peak = 149.121 ; gain = 64.125
INFO: [SYSC 207-301] Generating SystemC RTL for conv2D with prefix conv2D_.
INFO: [VHDL 208-304] Generating VHDL RTL for conv2D with prefix conv2D_.
INFO: [VLOG 209-307] Generating Verilog RTL for conv2D with prefix conv2D_.
INFO: [HLS 200-112] Total elapsed time: 17.496 seconds; peak allocated memory: 88.507 MB.
